name: Build modules

on:
  push:
    branches: [ master, ver/* ]
  pull_request:
  workflow_dispatch:

env:
  VERSION: '1.21.5'
  COMMIT_MSG: ${{ github.event.head_commit.message }}

jobs:
  build:
    runs-on: ubuntu-24.04
    concurrency:
      group: ${{ github.event_name != 'pull_request' && 'release' || format('pr-{0}', github.event.number) }}
    steps:
      - uses: actions/checkout@v4

      - name: Checkout release branch
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v4
        with:
          ref: release
          path: release

      - name: Fetch pull request base
        if: github.event_name == 'pull_request'
        run: git fetch origin ${{ github.base_ref }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: '0.5.4'
          enable-cache: true

      - name: Build and publish all modules
        if: github.event_name != 'pull_request'
        run: uv run beet -p beet-release.yaml -l ${{ env.LOG_LEVEL }} build
        env:
          BEET_MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          BEET_SMITHED_TOKEN: ${{ secrets.SMITHED_TOKEN }}
          LOG_LEVEL: ${{ runner.debug == 1 && 'DEBUG' || 'INFO'}}
          MASTER_BUILD: true

      - name: Build all modules for pull request
        if: github.event_name == 'pull_request'
        run: uv run beet -p beet-release.yaml -l ${{ env.LOG_LEVEL }} build
        env:
          LOG_LEVEL: ${{ runner.debug == 1 && 'DEBUG' || 'INFO'}}

      - name: Remove non-modules for artifact
        if: github.event_name == 'pull_request'
        run: |
          rm -r release/$VERSION/generated
          rm release/$VERSION/lib_*
          rm release/$VERSION/meta.json

      - name: Upload artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: 'Modules for pull request #${{ github.event.number }}'
          path: ${{ github.workspace }}/release/${{ env.VERSION }}/

      - name: Commit release
        if: github.event_name != 'pull_request'
        run: |
          git config --global user.email "${{ github.event.head_commit.author.email }}"
          git config --global user.name "${{ github.event.head_commit.author.username }}"
          cd release
          git add .
          git commit -m "ðŸš€ ${{ github.event.after }} $COMMIT_MSG"

      - name: Push release
        if: github.event_name != 'pull_request'
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: release
          branch: release

  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          # https://fabricmc.net/use/server/
          # https://modrinth.com/mod/fabric-api/versions
          # https://modrinth.com/mod/packtest/versions
          - version: '1.21.5'
            fabric_server_url: https://meta.fabricmc.net/v2/versions/loader/1.21.5/0.16.13/1.0.3/server/jar
            fabric_api_url: https://cdn.modrinth.com/data/P7dR8mSH/versions/FZ4q3wQK/fabric-api-0.119.9%2B1.21.5.jar
            packtest_url: https://cdn.modrinth.com/data/XsKUhp45/versions/Swh7th09/packtest-2.1-mc1.21.5.jar
    name: 'test-${{ matrix.version }}'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: '0.5.4'
          enable-cache: true

      - name: Build all modules for tests
        run: uv run beet -p beet-test.yaml -l ${{ env.LOG_LEVEL }} build
        env:
          LOG_LEVEL: ${{ runner.debug == 1 && 'DEBUG' || 'INFO'}}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download server files
        run: |
          curl -o server.jar ${{ matrix.fabric_server_url }}
          mkdir mods
          curl -o mods/fabric-api.jar ${{ matrix.fabric_api_url }}
          curl -o mods/packtest.jar ${{ matrix.packtest_url }}

      - name: Copy packs to world
        run: |
          mkdir -p world/datapacks
          rm out/gm4_zauber_cauldrons.zip
          rm out/gm4_zauber_liquids.zip
          cp out/gm4_*.zip world/datapacks

      - name: Run test server
        id: run-tests
        run: |
          java -Xmx2G -Dpacktest.auto -Dpacktest.auto.annotations -jar server.jar nogui

      - name: Upload test world
        if: ${{ failure() && steps.run-tests.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Test world in ${{ matrix.version }} for ${{ github.sha }}'
          path: ${{ github.workspace }}/world/
